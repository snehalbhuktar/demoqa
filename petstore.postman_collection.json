{
	"info": {
		"_postman_id": "0ec5a059-1858-4f20-8968-f2055626ef4d",
		"name": "petstore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "store_inventry",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/store/inventory",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"inventory"
					]
				}
			},
			"response": []
		},
		{
			"name": "store_order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// pm.test(\"Response is json and has status placed\", function (){",
							"//     const responseJson = pm.response.json();",
							"//     pm.expect(responseJson.status).to.eql(\"placed\");",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 2,\n  \"petId\": 1,\n  \"quantity\": 2,\n  \"shipDate\": \"2021-10-14T11:41:50.044Z\",\n  \"status\": \"placed\",\n  \"complete\": true\n}"
				},
				"url": {
					"raw": "{{url}}/store/order",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "update_user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// pm.test(\"Response is json and has element code 200\", function (){",
							"//     const responseJson = pm.response.json();",
							"//     pm.expect(responseJson.code).to.eql(200);",
							"// });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "accept",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"id\": 1,\n  \"username\": \"new_user\",\n  \"firstName\": \"new1\",\n  \"lastName\": \"user\",\n  \"email\": \"ab.cd@email.com\",\n  \"password\": \"P@ssword11\",\n  \"phone\": \"12345678\",\n  \"userStatus\": 0\n}"
				},
				"url": {
					"raw": "{{url}}/user/new_user",
					"host": [
						"{{url}}"
					],
					"path": [
						"user",
						"new_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "pet_find_by_status",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// let jsonData = pm.response.json()",
							"",
							"// pm.test('The `status` contains pending', () => {",
							"//     _.each(jsonData, (item) => {",
							"//         pm.expect(item.status).to.equal('pending')",
							"//     })",
							"// })"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/pet/findByStatus?status=pending",
					"host": [
						"{{url}}"
					],
					"path": [
						"pet",
						"findByStatus"
					],
					"query": [
						{
							"key": "status",
							"value": "pending"
						}
					]
				}
			},
			"response": []
		}
	]
}